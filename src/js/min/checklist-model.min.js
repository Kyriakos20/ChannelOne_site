angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(e,n){function r(e,n,r){if(angular.isArray(e))for(var t=e.length;t--;)if(r(e[t],n))return!0;return!1}function t(e,n,t){return e=angular.isArray(e)?e:[],r(e,n,t)||e.push(n),e}function a(e,n,r){if(angular.isArray(e))for(var t=e.length;t--;)if(r(e[t],n)){e.splice(t,1);break}return e}function i(i,c,l){function o(){return l.checklistValue?e(l.checklistValue)(i.$parent):l.value}function s(e,n){var r=f(i.$parent);angular.isFunction(f.assign)&&(n===!0?f.assign(i.$parent,t(r,e,d)):f.assign(i.$parent,a(r,e,d)))}function u(e,n){return p&&p(i)===!1?void s(o(),$(i)):void $.assign(i,r(e,o(),d))}var h=l.checklistModel;l.$set("checklistModel",null),n(c)(i),l.$set("checklistModel",h);var f=e(h),g=e(l.checklistChange),p=e(l.checklistBeforeChange),$=e(l.ngModel),d=angular.equals;if(l.hasOwnProperty("checklistComparator"))if("."==l.checklistComparator[0]){var k=l.checklistComparator.substring(1);d=function(e,n){return e[k]===n[k]}}else d=e(l.checklistComparator)(i.$parent);i.$watch(l.ngModel,function(e,n){if(e!==n){if(p&&p(i)===!1)return void $.assign(i,r(f(i.$parent),o(),d));s(o(),e),g&&g(i)}}),i.$watch(o,function(e,n){if(e!=n&&angular.isDefined(n)&&i[l.ngModel]===!0){var r=f(i.$parent);f.assign(i.$parent,a(r,n,d)),f.assign(i.$parent,t(r,e,d))}}),angular.isFunction(i.$parent.$watchCollection)?i.$parent.$watchCollection(h,u):i.$parent.$watch(h,u,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(e,n){if(!n.checklistValue&&!n.value)throw"You should provide `value` or `checklist-value`.";return n.ngModel||n.$set("ngModel","checked"),i}}}]);